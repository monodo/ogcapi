# Overrides for development
volumes:
  pgdata:

services:
  web:
    image: ogapi
    build:
      args:
        ENV: DEV

    # Uncomment those two lines for debug
    #tty: true
    #stdin_open: true
    environment:
      ENV: DEV
    # Runserver for live reload
    command: "python3 manage.py runserver 0.0.0.0:9000"
    volumes:
      # Mount code for live reload
      - .:/code
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "${DJANGO_DOCKER_PORT}:9000"

  postgres:
    image: postgis/postgis:16-3.5
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-U", "${PGUSER}", "-d", "${PGDATABASE}" ]
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 10s
    environment:
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASSWORD}
      - POSTGRES_DB=${PGDATABASE}
    ports:
      - "${POSTGRES_DOCKER_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  zitadel:
    restart: 'always'
    networks:
      - 'zitadel'
    image: 'ghcr.io/zitadel/zitadel:latest'
    command: 'start-from-init --masterkey "MasterkeyNeedsToHave32Characters" --tlsMode disabled'
    environment:
      ZITADEL_DATABASE_POSTGRES_HOST: db
      ZITADEL_DATABASE_POSTGRES_PORT: 5432
      ZITADEL_DATABASE_POSTGRES_DATABASE: zitadel
      ZITADEL_DATABASE_POSTGRES_USER_USERNAME: zitadel
      ZITADEL_DATABASE_POSTGRES_USER_PASSWORD: zitadel
      ZITADEL_DATABASE_POSTGRES_USER_SSL_MODE: disable
      ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME: postgres
      ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD: postgres
      ZITADEL_DATABASE_POSTGRES_ADMIN_SSL_MODE: disable
      ZITADEL_EXTERNALSECURE: false
    depends_on:
      db:
        condition: 'service_healthy'
    ports:
      - '8080:8080'

  db:
    restart: 'always'
    image: postgres:16-alpine
    environment:
      PGUSER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - 'zitadel'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "zitadel", "-U", "postgres"]
      interval: '10s'
      timeout: '30s'
      retries: 5
      start_period: '20s'

networks:
  zitadel:
